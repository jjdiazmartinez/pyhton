package <package>;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import <base-package>.exception.BusinessLogicException;
import <base-package>.message.ResponseMessage;


import java.util.List;
import java.util.Map;

<IMPORT>
/**
*Code generated by charmarin from softcaribbean
*/

@RestController
@RequestMapping("/api/<DTOParam>")
public class <DTO>Controller {

    private final Logger log = LoggerFactory.getLogger(<DTO>Controller.class);


    private final BusinessLogic<DTO> businessLogic<DTOParam>;

    public <DTO>Controller(BusinessLogic<DTO> businessLogic<DTOParam>) {
        this.businessLogic<DTOParam> = businessLogic<DTOParam>;
    }
    @PostMapping({"/saveOrUpdate"})
    public ResponseEntity<ResponseMessage<<DTO>>> saveOrUpdate(@RequestBody <DTO> entity) throws BusinessLogicException{
        log.debug("REST request to saveOrUpdate <DTO> : {}", entity);
        <DTO> result = this.businessLogic<DTOParam>.saveOrUpdate(entity) ;
        return ResponseEntity.ok(new ResponseMessage<>(0,null, result));
    }
    @PostMapping({"/Delete"})
    public ResponseEntity<ResponseMessage<<DTO>>> Delete(@RequestBody <DTO> entity) throws BusinessLogicException{
        log.debug("REST request to Delete <DTO> : {}", entity);
        <DTO> result = this.businessLogic<DTOParam>.Delete(entity) ;
        return ResponseEntity.ok(new ResponseMessage<>(0,null, result));
    }
    @PostMapping({"/getById"})
    public ResponseEntity<ResponseMessage<<DTO>>> getById(@RequestBody <DTO> entity) throws BusinessLogicException{
        log.debug("REST request to getById <DTO> : {}", entity);
        <DTO> result = this.businessLogic<DTOParam>.getById(entity) ;
        return ResponseEntity.ok(new ResponseMessage<>(0,null, result));
    }
    @GetMapping({"/getAll"})
    public ResponseEntity<ResponseMessage<List<<DTO>>>> getAll() throws BusinessLogicException{
        log.debug("REST request to getAll <DTO> : {}");
        List<<DTO>> result = this.businessLogic<DTOParam>.getAll();
        return ResponseEntity.ok(new ResponseMessage<>(0,null, result));
    }

}
