package <package>;

import <base-package>.config.ManagerQuery;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.dao.EmptyResultDataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import java.util.List;
import java.util.Map;
import javax.sql.DataSource;
import <base-package>.exception.DataAccesException;
<IMPORT>
/**
*Code generate for charmarin by softcaribbean
*/
@Repository
public class <NameClass>Impl implements <NameClass>  {



    JdbcTemplate jdbcTemplate;
    ManagerQuery managerQuery = ManagerQuery.getInstance();
    public <NameClass>Impl(DataSource dataSource) {
        jdbcTemplate = new JdbcTemplate(dataSource);
    }

    @Override
    public List<<DTO>> getAll() throws DataAccesException {

        String QUERY = managerQuery.getQuery("<QUERY_GET_ALL>");
        return jdbcTemplate.query(QUERY, new <MAPPER>);
    }

    @Override
    public <DTO> getById(String id) throws DataAccesException{
        try{
            String QUERY = managerQuery.getQuery("<QUERY_BY_ID>");
            return jdbcTemplate.queryForObject(QUERY, new <MAPPER>,id);
        }
        catch(EmptyResultDataAccessException ex){
            return null;
        }
    }

    @Override
    public <DTO> insert(<DTO> entity) throws DataAccesException{
		String INSERT = managerQuery.getQuery("<INSERT_ID>");

		jdbcTemplate.update(INSERT,<PARAM_INSERT>);
		return entity;

    }

    @Override
    public <DTO> update(<DTO> entity) throws DataAccesException{
		String UPDATE = managerQuery.getQuery("<UPDATE_ID>");
        jdbcTemplate.update(UPDATE,<PARAM_UPDATE>);
        return entity;
    }

    @Override
    public Boolean delete(String id) throws DataAccesException {
		String DELETE = managerQuery.getQuery("<DELETE_ID>");
        return jdbcTemplate.update(DELETE,
                id
        )>0;
    }


}